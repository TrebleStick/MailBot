<launch>
<!-- Convenience launch file to launch odometry, rtabmap and rtabmapviz nodes at once -->
<!-- remap: the package expects certain names for the input and output, remap allows you to associate them to different names -->
<!-- arg: a variable that can be accssed by the rest of the launch file-->
<!-- http://wiki.ros.org/roslaunch/XML -->
<!-- This launch file has been modified rom the rtabmap.launch file that comes with rtabmap_ros 
    We do this naturally using the 'include' syntax, that allows us to  specify arguments to the launch file
    just as we do <parameter name>:=<value> when calling in the command line -->
    <!-- default=   means it can be overwridden by commandline arguments
         values     means it cannot be overwridden   -->
  
  <!-- Fake LaserScan data ? -->
  <arg name="fakeLasers"              default="true" /> 

  <!-- Allow visualization -->
  <arg name="rtabmapviz"              default="true" /> 
  <arg name="rviz"                    default="false" />

  <!-- Localization-only mode -->
  <arg name="localization"            default="false"/>

  <!-- Corresponding config files -->
  <arg name="gui_cfg"                 default="~/.ros/rtabmap_gui.ini" />
  <arg name="rviz_cfg"                default="$(find rtabmap_ros)/launch/config/rgbd.rviz" />
  <arg name="frame_id"                default="base_link"/>     <!-- Fixed frame id, you may set "base_link", "base_footprint", or "camera link" if they are published -->
  <arg name="args"                    default=""/>              <!-- delete_db_on_start, udebug -->
  <arg name="output"                  default="screen"/>        <!-- Control node output (screen or log) -->

  <!-- RGB-D related topics -->
  <arg name="rgb_topic"               default="/camera/rgb/image_rect_color" />
  <arg name="depth_topic"             default="/camera/depth_registered/image_raw" />
  <arg name="camera_info_topic"       default="/camera/rgb/camera_info" />
  <arg name="depth_camera_info_topic" default="$(arg camera_info_topic)" />


  <!-- Already synchronized RGB-D related topic ?, with rtabmap_ros/rgbd_sync nodelet -->
  <arg name="rgbd_sync"               default="false"/>         <!-- pre-sync rgb_topic, depth_topic, camera_info_topic -->
  <arg name="approx_rgbd_sync"        default="true"/>          <!-- false=exact synchronization -->


  <!-- Laser Scan Subscription -->
  <arg if="$(arg fakeLasers)" name="subscribe_scan"          default="true"/>  <!-- If we are using fakeLasers, we should subscribe to scan -->
  <arg if="$(arg fakeLasers)" name="scan_topic"          default="kinect_scan"/>  <!-- If we are using fakeLasers, we should set the right topic (defined below) -->
  <arg name="subscribe_scan_cloud"    default="false"/>
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>


    <!-- Kinect cloud to laser scan -->
    <node if="$(arg fakeLasers)" pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
      <remap from="image"     to="/camera/depth_registered/image_raw"/>
      <remap from="camera_info" to="/camera/depth_registered/camera_info"/>
      <remap from="scan" to="/kinect_scan"/>
      <param name="range_max" type="double" value="4"/>
    </node>

  <!-- Odometry Related -->
  <arg name="visual_odometry"          default="false"/>          <!-- Launch rtabmap visual odometry node -->
  <arg name="icp_odometry"             default="false"/>         <!-- Launch rtabmap icp odometry node -->
  <arg name="odom_topic"               default="odom"/>          <!-- Odometry topic name -->
  <arg name="vo_frame_id"              default="$(arg odom_topic)"/> <!-- Visual/Icp odometry frame ID for TF -->

  <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
    <!-- We now can pass in the values that are set above into the launch file -->
    <!-- Mainly including those where we have changed the defaults -->

    <!-- Turn Off Visual Odometry -->
    <arg name="visual_odometry"          value="$(arg visual_odometry)"/>   
    <arg name="odom_topic"               value="$(arg odom_topic)" />

    <!-- Laser Scan Subscription -->
    <arg name="subscribe_scan"          value="$(arg subscribe_scan)"/>  <!-- If we are using fakeLasers, we should subscribe to scan -->
    <arg name="scan_topic"              value="$(arg scan_topic)"/>  <!-- If we are using fakeLasers, we should set the right topic (defined below) -->
    <arg name="subscribe_scan_cloud"    value="$(arg subscribe_scan_cloud)"/>  <!-- Not sure if this needs to be true or not -->
    <arg name="scan_cloud_topic"        value="$(arg scan_cloud_topic)"/>

    <!-- Localization-only mode -->
    <arg name="localization"            value="$(arg localization)"/>

    <!-- Corresponding config files -->
    <arg name="gui_cfg"                 value="$(arg localization)" />
    <arg name="rviz_cfg"                value="$(find rviz_cfg" />
    <arg name="frame_id"                value="$(arg frame_id)"/>     <!-- Fixed frame id, you may set "base_link", "base_footprint", or "camera link" if they are published -->
    <arg name="args"                    value="$(arg args)"/>              <!-- delete_db_on_start, udebug -->
    <arg name="output"                  value="$(arg output)"/>        <!-- Control node output (screen or log) -->

    <!-- Allow visualization -->
    <arg name="rtabmapviz"              value="$(arg rtabmapviz)" /> 
    <arg name="rviz"                    value="$(arg rviz)" />


  </include>


</launch>
